name: Python Flask CI with Docker (Multi-Arch Matrix Build)

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

env:
  DOCKER_IMAGE_NAME: ktenman/captcha-solver
  DOCKER_IMAGE_TAG: latest

jobs:
  build:
    name: üõ†Ô∏è Build and push platform-specific images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      # Build and push a platform-specific image. We give it a platform-specific tag.
      - name: Build and Push Platform Image
        run: |
          docker buildx build \
            --platform ${{ matrix.platform }} \
            -t ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}-${{ matrix.platform }} \
            --push .

  manifest:
    name: üóÇÔ∏è Create and push multi-platform manifest
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      # Create and push a manifest that includes all platforms
      - name: Create and Push Manifest
        run: |
          # Create a manifest referencing the platform-specific images built above
          docker manifest create ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }} \
            --amend ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}-linux/amd64 \
            --amend ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}-linux/arm64

          # Push the manifest to make the multi-platform image available
          docker manifest push ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}

  auto-merge-dependabot:
    name: ü§ñ Auto merge dependabot PR
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs: [manifest]
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: ü§ñ Merge PR from dependabot
        uses: fastify/github-action-merge-dependabot@v3.11.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          target: minor
          merge-method: rebase
