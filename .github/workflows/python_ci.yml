name: Python Flask CI with Docker (Multi-Arch Matrix Build)

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

env:
  DOCKER_IMAGE_NAME: ktenman/captcha-solver
  DOCKER_IMAGE_TAG: latest

jobs:
  build:
    name: üõ†Ô∏è Build and push platform-specific images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to Docker Hub
        if: github.actor != 'dependabot[bot]'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      # For non-Dependabot runs - build and push
      - name: Build and Push Platform Image
        if: github.actor != 'dependabot[bot]'
        run: |
          docker buildx build \
            --platform linux/${{ matrix.arch }} \
            -t ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}-${{ matrix.arch }} \
            --push .

      # For Dependabot runs - build only, no push
      - name: Build Platform Image (Dependabot)
        if: github.actor == 'dependabot[bot]'
        run: |
          docker buildx build \
            --platform linux/${{ matrix.arch }} \
            -t ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}-${{ matrix.arch }} \
            --load .

  manifest:
    name: üóÇÔ∏è Create and push multi-platform manifest
    runs-on: ubuntu-latest
    needs: build
    if: github.actor != 'dependabot[bot]'  # Skip for Dependabot PRs
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Create and Push Manifest
        run: |
          docker buildx imagetools create -t ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }} \
            ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}-amd64 \
            ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}-arm64

  auto-merge-dependabot:
    name: ü§ñ Auto merge dependabot PR
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pull-requests: write
      contents: write
      checks: read
    steps:
      # Wait for all matrix jobs to complete
      - name: ‚è≥ Wait for amd64 build
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          check-name: "üõ†Ô∏è Build and push platform-specific images (amd64)"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 20

      - name: ‚è≥ Wait for arm64 build
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          check-name: "üõ†Ô∏è Build and push platform-specific images (arm64)"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 20

      - name: ü§ñ Merge PR from dependabot
        uses: fastify/github-action-merge-dependabot@v3.11.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          target: minor
          merge-method: rebase
          dependency-type: all